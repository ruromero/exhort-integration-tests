---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: run-unit-tests
spec:
  description: >-
    OpenJDK task with a Redis sidecar. The task requests 4Gi of memory with a limit of 6Gi
  params:
  - name: SNAPSHOT
    description: Snapshot context data of the current build
  - name: JDK_IMAGE
    description: Reference of the image buildah will produce.
    default: registry.redhat.io/ubi9/openjdk-21:1.22
  - name: REDIS_IMAGE
    description: The location of the buildah builder image.
    default: docker.io/redis/redis-stack:7.2.0-v7
  - name: GITHUB_MVN_CREDS_SECRET
    description: Secret containing the Github username and token for GitHub Maven repository
    default: gh-credentials
  steps:
  - name: clone-git
    image: registry.redhat.io/ubi9/ubi-minimal:9.5
    env:
      - name: SNAPSHOT
        value: $(params.SNAPSHOT)
      - name: KONFLUX_COMPONENT_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.labels['appstudio.openshift.io/component']
    script: |
      microdnf install --assumeyes git jq
      echo -e "Using Snapshot:\n ${SNAPSHOT}"
      echo -e "Target component:\n ${KONFLUX_COMPONENT_NAME}"
      echo `jq -r --arg component_name "$KONFLUX_COMPONENT_NAME" '.components[] | select(.name == $component_name) | .source.git.url' <<< "$SNAPSHOT"`
      export GIT_URL=$(jq -r --arg component_name "$KONFLUX_COMPONENT_NAME" '.components[] | select(.name == $component_name) | .source.git.url' <<< "$SNAPSHOT")
      export GIT_REVISION=$(jq -r --arg component_name "$KONFLUX_COMPONENT_NAME" '.components[] | select(.name == $component_name) | .source.git.revision' <<< "$SNAPSHOT")
      git clone $GIT_URL /workspace
      cd /workspace
      git checkout $GIT_REVISION
      chown -R 185:root /workspace
  - name: run-tests
    image: $(params.JDK_IMAGE)
    volumeMounts:
      - name: gh-mvn-creds
        mountPath: /secret
        readOnly: true
    script: |
      cd /workspace
      if [ -f /secret/gh-creds.txt ]; then
        . /secret/gh-creds.txt
        # Create the XML block to be inserted as a single line with \n for newlines
        XML_BLOCK="\
        <server>\n\
          <id>github</id>\n\
          <username>${GH_USER}</username>\n\
          <password>${GH_TOKEN}</password>\n\
        </server>"
        sed -i '/<!-- ### configured servers ### -->/a\'"$XML_BLOCK"'' $HOME/.m2/settings.xml
        echo "found credentials secret, added Maven server configuration"
      else
        echo "secret file not found, using default configuration"
      fi
      EXTRA_ARGS=" -Dquarkus.redis.hosts=redis://localhost:6379/"
      if [ "$KONFLUX_COMPONENT_NAME" = "onguard" ]; then
        echo "onguard uses a native build"
        EXTRA_ARGS+=" -Pnative"
      else
        echo "exhort doesn't use a native build"
      fi
      set -x
      mvn -B verify $EXTRA_ARGS
    computeResources:
      requests:
        memory: 4Gi
      limits:
        memory: 6Gi
  sidecars:
    - image: $(params.REDIS_IMAGE)
      name: redis-stack
  volumes:
    - name: gh-mvn-creds
      secret:
        secretName: $(params.GITHUB_MVN_CREDS_SECRET)
